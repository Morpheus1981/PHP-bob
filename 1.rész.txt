

a beágyazott php kód nyitó és záró tag -je. ez a legnépszerűbb XML stílus

<?php

?>

----------------------------------------------------
a file kiíratása

echo vagy print segítségével a print lassabb kicsivel. Amit ki szeretnénk iratni azt 
mind '' jelek közé vagy "" közé kell kitenni és a benne lévő szöveg meg fog jelenni.

echo '<p> Rendelés feldoglzva.</p>'

------------------------------------------------------
megjegyzés a php kódban a nyitó és záró tag között 

// vagy # jeleket követően egysoros míg /* */ jelek között két vagy többsoros egybefüggő
kommenteket lehet írni.

-----------------------------------------------------

dinamikus tartalom hozzáadása:

az aktuális idő hozzáadása/kiíratása
 
echo date('H:i, jS F Y');          //a date() függvény meghívása

 -- H  az óra 24 órás időformátumban, az egyszámjegyű órák előtt bevezető nullával
 -- i a percek (szükség esetén szintén bevezető nullával)
 -- j a hónap napja (mindig nulla nélkül)
 -- S s sorszámnév képzője (jelen esetben ez th, hiszen angolul írjuk ki a dátumot)
 -- F a hónap tejes neve
 -- Y az aktuális év

-----------------------------------------------------
karakterláncok összefűzése:

Az összefűzés ponttal végezzük el.

echo $abroncs_db.' gumiabroncs<br />';

fontos tudni ,hogy az interpoláció csak a kettős idézőjellel közrefogtt karakterláncok
esetén működik. Egyszeres idézőjelet használó sztringekben nem helyezhetjük ezzel 
a módszerrel a változók nevét.
pl_:
echo '$abroncs_db gumiabroncs<br />'; egyszerűen az "$abroncs_db gumiabroncs<br />" 
karakterláncot küldi el a böngészőnek. A kettps idézőjelen belül lévő változónév 
helyén a változó értéke jelenik meg. Egyszeres idézőjel esetén a változó neve vagy 
bármilyen más szöveg változatlanul lesz elküldve.

------------------------------------------------------

A karakterláncok meghatározásának harmadik módszere a heredoc szintakszis (<<<) használata.
A heredoc szintakszis a karakterláncot befejező jel hazsnálatával teszi lehetővé a hosszű sztringek egyértelmű meghatározását.
A következő példa egy háromsoros karakterláncot hoz létre és jelenít meg :
echo <<< vege
1.sor
2.sor
3.sor
vege

a vege szöveg helyett tetszoleges szó választható a lényeg az hogy a benne tárolt
dat egyben összeolvasva tárolódik el egy karakterláncban.
---------------------------------------------------------

Azonosítók:
számokkal nem kezdődhetnek, 
kis és nagybetűkre való érzékenység
tetszőleges hosszúságú betűket és számokat is tartalmazhat
a változókat nem szükséges használatuk előtt dekralálni, 
akkor jönnek létre amikor először értéket adunk neki.
php adattípusok:

-  Ineger- egészszám
-  Float (másnéven double)- valós (lebegőpontos) szám
-  String - karakterek sorozata, karakterlánc
-  Boolean - true (igaz )vagy false (hameis) értéket felvevő logikai változó
-  Array - tomb, tobb adatelem tárolására használható változó
-  Object- objektum, osztálypéldányok tárolására használható változó

-----------------------------------------------------------
típuskényszerítés:
$osszmennyiség = 0;
$vegosszeg = (float)$osszmennyiség;

A típuskényszerítést a fenti módon érhetjük el ha a változó elé zárójelben a kívánt
adattípust írva kényszerítjük a programot a kívánt adattípusban történő tárolásra.

---------------------------------------------------------------
változó változók:

$valtozo_neve = 'abroncs_db';

az $abroncs_db érétkének megváltoztatására használhatjuk a $$valtozo_neve-t is.
mely során a fenti példánál maradva 
ha beírjuk a $$valtozo_neve = 5; 
akkor az $abroncs_db = 5;


---------------------------------------------------------------
Állandók dekralálása és használata:

az állandókat define függvénnyel határozhatjuk meg, és nagy nyomtatott betűvel adjuk meg 
azok nevét valamint értékét vesszővel elválasztva a lenti példában leírtak szerint.
A nagybetű nem kötelező de ragaszkodnunk kell ehhez mert ezzel egyértelműen 
megkülönböztethetőek.

define('ABRONCSAR', 100);

-----------------------------------------------------------------
34- 42 ig a műveleti jelek és azok hatása az értékekre ki kell nyomtatni.


------------------------------------------------------------------
Változókhoz kapcsolódó függvények

a gettype() valamint a settype()

milyen paramétert várnak és mit adnak vissza:

string gettype (mixed valtozo);
bool settyep(mixed valtozo, string tipus);

gettype() használatához mindenképpen át kell ladnunk változót. A függvény meghatározza annak
típusát, majd a típusnevet tartalmazó szöveget ad vissza, ami bool, int , bouble (float típusok), 
string, array, object, resource vagy NULL lehet.
Amiben a változó típusa nem szabványos akkor a függvény az unkown type szöveget adja vissza.

A settype() függvénynek két paramétere van: először átadjuk neki a változót, amelynek meg kívánjuk
változtatni a típusát, majd az új adattípust tartalmazó karakterláncot(a típust az előző listából választhatjuk ki.)

a függvények használata:

$a = 56;
echo gettype($a). '<br />';
settype($a, 'double');
echo gettype($a). '<br />';

	A getype() első hívásakor az $a ineger typusú . A settype() hívása után típusa 
double-ra változik. A PHP adott típusok ellenőrzsésre alkalmas függvényeket is kínál. 
Mindegyiknek egy változó a paramétere, és true vagy false értéket ad vissza.

----------------------------------------------------------------
típusok ellenőrzése php kódban:

is_array() - megállapítja, hogy a változó tömb.-e
is_double(), is_float(), is_real() (ugyanaz a függvény) - Megállapítja, hoy a változó float típusú -e.
is_long(), is_int(), is_intiger() (ugyanaz a függvény) - megállapítja, hogy a változó integer típusú-e.
is_string()- megállapítja, hogy a változó string típusú-e.
is_bool() -megállapítha, hogy a változó boolean típusú-e.
is_object() -megállapítja , hogy a változó object típusú-e .
is_resource() - megállapítja, hogy a változó resource típusú-e.
is_null() -megállapítja, hogy a változó null típusú- e.
is_scalar() -megállapítja, hogy a változó skaláris- e (integer, boolean, string vagy float típus valamelyike).
is_numeric() -megállapítja, hogy a változó valamilyen szám vagy numerikus szöveg-e.
is_callable() -megállapítja, hogy a változó egy érvényes függvény neve-e.


--------------------------------------------------------
Változók állapotának ellenőrzése

--- nem értem ezt a részt és nem is működik.---
--------------------------------------------------------
Változók típuskonverziója_:
 A változók típusalakítását függvényhívással is elérhetjük. Az alábbi három függvény használható erre a célra:

int intval (mixed valtozo[, intalap]);
float floatval(mmixed valtozo);
string strval(mixed valtozo);

--------------------------------------------------------
Döntéshozatal feltételes utasításokkal.:
if utasításra példa:

if($osszmennyiség == 0)
echo 'Egyetlen tételt sem rendelt az előző oldalon!<br />';




